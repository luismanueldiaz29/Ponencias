// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ponencias.Models;

namespace Ponencias.Migrations
{
    [DbContext(typeof(PonenciaContext))]
    partial class PonenciaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ponencias.Models.Docente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FacultadId")
                        .HasColumnType("int");

                    b.Property<int>("Identificacion")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VinculoInst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FacultadId");

                    b.ToTable("Docente");
                });

            modelBuilder.Entity("Ponencias.Models.Estudiante", b =>
                {
                    b.Property<int>("EstudianteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApellidoEstudiante")
                        .HasColumnType("int");

                    b.Property<int>("NombreEstudiante")
                        .HasColumnType("int");

                    b.Property<int>("SemilleroId")
                        .HasColumnType("int");

                    b.HasKey("EstudianteId");

                    b.HasIndex("SemilleroId");

                    b.ToTable("Estudiante");
                });

            modelBuilder.Entity("Ponencias.Models.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FechaEvento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaFinal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkEvento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreEvento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroDias")
                        .HasColumnType("int");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.Property<string>("TipoTransporte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorInscripcion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorTrasporte")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Evento");
                });

            modelBuilder.Entity("Ponencias.Models.Facultad", b =>
                {
                    b.Property<int>("FacultadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreFacultad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FacultadId");

                    b.ToTable("Facultad");
                });

            modelBuilder.Entity("Ponencias.Models.GrupoInvestigacion", b =>
                {
                    b.Property<int>("GrupoInvestigacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DocenteId")
                        .HasColumnType("int");

                    b.Property<int>("InvestigacionId")
                        .HasColumnType("int");

                    b.Property<string>("NombreGrupo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SemilleroId")
                        .HasColumnType("int");

                    b.HasKey("GrupoInvestigacionId");

                    b.HasIndex("DocenteId");

                    b.HasIndex("InvestigacionId");

                    b.HasIndex("SemilleroId");

                    b.ToTable("GrupoInvestigacion");
                });

            modelBuilder.Entity("Ponencias.Models.Investigacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GrupoId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrupoInvestigacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreInvestigacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Investigacion");
                });

            modelBuilder.Entity("Ponencias.Models.Programa", b =>
                {
                    b.Property<int>("ProgramaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FacultadId")
                        .HasColumnType("int");

                    b.Property<string>("NombrePrograma")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProgramaId");

                    b.HasIndex("FacultadId");

                    b.ToTable("Programa");
                });

            modelBuilder.Entity("Ponencias.Models.Repositorio", b =>
                {
                    b.Property<int>("RepositorioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("RepositorioId");

                    b.ToTable("Repositorio");
                });

            modelBuilder.Entity("Ponencias.Models.Semillero", b =>
                {
                    b.Property<int>("SemilleroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NombreSemillero")
                        .HasColumnType("int");

                    b.HasKey("SemilleroId");

                    b.ToTable("Semillero");
                });

            modelBuilder.Entity("Ponencias.Models.Solicitud", b =>
                {
                    b.Property<int>("SolicitudId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DocenteId")
                        .HasColumnType("int");

                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<string>("FechaEntrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvestigacionId")
                        .HasColumnType("int");

                    b.Property<string>("NombrePonencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RepositorioId")
                        .HasColumnType("int");

                    b.HasKey("SolicitudId");

                    b.HasIndex("DocenteId");

                    b.HasIndex("EventoId");

                    b.HasIndex("InvestigacionId");

                    b.HasIndex("RepositorioId");

                    b.ToTable("Solicitud");
                });

            modelBuilder.Entity("Ponencias.Models.Docente", b =>
                {
                    b.HasOne("Ponencias.Models.Facultad", "Facultad")
                        .WithMany("Docentes")
                        .HasForeignKey("FacultadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ponencias.Models.Estudiante", b =>
                {
                    b.HasOne("Ponencias.Models.Semillero", "Semillero")
                        .WithMany("Estudiantes")
                        .HasForeignKey("SemilleroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ponencias.Models.GrupoInvestigacion", b =>
                {
                    b.HasOne("Ponencias.Models.Docente", "Docente")
                        .WithMany()
                        .HasForeignKey("DocenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ponencias.Models.Investigacion", "Investigacion")
                        .WithMany()
                        .HasForeignKey("InvestigacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ponencias.Models.Semillero", "Semillero")
                        .WithMany()
                        .HasForeignKey("SemilleroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ponencias.Models.Programa", b =>
                {
                    b.HasOne("Ponencias.Models.Facultad", "Facultad")
                        .WithMany("Programas")
                        .HasForeignKey("FacultadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ponencias.Models.Solicitud", b =>
                {
                    b.HasOne("Ponencias.Models.Docente", "Docente")
                        .WithMany()
                        .HasForeignKey("DocenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ponencias.Models.Evento", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ponencias.Models.Investigacion", "Investigacion")
                        .WithMany()
                        .HasForeignKey("InvestigacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ponencias.Models.Repositorio", "Repositorio")
                        .WithMany()
                        .HasForeignKey("RepositorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
